<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置spring的IOC，配置service-->
    <bean id="accountService" class="com.szh.service.impl.AccountServiceImpl"></bean>

    <!--配置spring基于XML的AOP配置
        1.把通知bean也交给spring管理
        2.使用aop：config标签表明开始的AOP配置
        3.使用aop：aspect标签表明切面
            id：为切面提供唯一标志
            ref：指定通知类bean的id
         4.aop：aspect标签内部使用对应标签配置通知类型
            aop:before:前置通知
                method属性：用于指定Logger类中哪些方法是前置通知
                pointcut属性：用于指定切入点表达式，该表达式含义是对业务层那些方法增强

           切入点表达式写法
                关键字execution
                表达式：
                    访问修饰符 返回值 包名.类名.方法名（参数列表）
                标准表达式：public void com.szh.service.impl.AccountServiceImpl.saveAccount()
                访问修饰符可以省略
                通配表达式* *..*.*(..)
                实际开发中切入点表达式：例：* com.szh.service.impl.*.*(..)
    -->
    <!--配置Logger类-->
    <bean id="logger" class="com.szh.utils.Logger"></bean>

    <!--配置AOP-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--配置通知类型，并建立通知方法和切入点关联-->
            <aop:before method="printLog" pointcut="execution(* com.szh.service.impl.*.*(..))"></aop:before>
        </aop:aspect>
    </aop:config>
</beans>